// Firebase Storage Security Rules - Updated for Hand Speak App
// Copy this to Firebase Console > Storage > Rules

rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    
    // Profile images - direct file under profile_images folder
    match /profile_images/{fileName} {
      allow read: if true; // Profile photos can be viewed by everyone
      allow write: if request.auth != null 
        && fileName.matches('.*\\.(jpg|jpeg|png|gif|webp)') // Only image files
        && request.resource.size < 5 * 1024 * 1024 // Max 5MB
        && request.resource.contentType.matches('image/.*'); // Only image content type
    }
    
    // Profile images - nested under user folders (alternative structure)
    match /profile_images/{userId}/{fileName} {
      allow read: if true; // Profile photos can be viewed by everyone
      allow write: if request.auth != null 
        && request.auth.uid == userId
        && fileName.matches('.*\\.(jpg|jpeg|png|gif|webp)') // Only image files
        && request.resource.size < 5 * 1024 * 1024 // Max 5MB
        && request.resource.contentType.matches('image/.*'); // Only image content type
    }
    
    // Video files - user can only access their own videos
    match /videos/{userId}/{fileName} {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow write: if request.auth != null 
        && request.auth.uid == userId
        && fileName.matches('.*\\.(mp4|mov|avi|mkv|webm)') // Only video files
        && request.resource.size < 50 * 1024 * 1024 // Max 50MB
        && request.resource.contentType.matches('video/.*'); // Only video content type
    }
    
    // Video files - direct under videos folder (alternative)
    match /videos/{fileName} {
      allow read: if request.auth != null;
      allow write: if request.auth != null 
        && fileName.matches('.*\\.(mp4|mov|avi|mkv|webm)') // Only video files
        && request.resource.size < 50 * 1024 * 1024 // Max 50MB
        && request.resource.contentType.matches('video/.*'); // Only video content type
    }
    
    // Temporary files for processing
    match /temp/{userId}/{fileName} {
      allow read, write, delete: if request.auth != null && request.auth.uid == userId;
    }
    
    // Allow authenticated users to upload to their own folders
    match /users/{userId}/{allPaths=**} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Default deny rule for security
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}
