rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    
    // Profile images - nested under user folders (recommended structure)
    match /profile_images/{userId}/{fileName} {
      allow read: if true; // Profile photos can be viewed by everyone
      allow write: if request.auth != null 
        && request.auth.uid == userId
        && fileName.matches('.*\\.(jpg|jpeg|png|gif|webp)') // Only image files
        && request.resource.size < 5 * 1024 * 1024 // Max 5MB
        && request.resource.contentType.matches('image/.*'); // Only image content type
    }
    
    // Profile images - direct file under profile_images folder (fallback)
    match /profile_images/{fileName} {
      allow read: if true; // Profile photos can be viewed by everyone
      allow write: if request.auth != null 
        && fileName.matches('.*\\.(jpg|jpeg|png|gif|webp)') // Only image files
        && request.resource.size < 5 * 1024 * 1024 // Max 5MB
        && request.resource.contentType.matches('image/.*'); // Only image content type
    }
    
    // Video files - user can only access their own videos
    match /videos/{userId}/{fileName} {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow write: if request.auth != null 
        && request.auth.uid == userId
        && fileName.matches('.*\\.(mp4|mov|avi|mkv|webm)') // Only video files
        && request.resource.size < 100 * 1024 * 1024 // Max 100MB
        && request.resource.contentType.matches('video/.*'); // Only video content type
    }
    
    // Temporary files for processing (optional)
    match /temp/{userId}/{fileName} {
      allow read, write: if request.auth != null 
        && request.auth.uid == userId
        && request.resource.size < 200 * 1024 * 1024; // Max 200MB for temp files
    }
    
    // Public files (if any) - read only
    match /public/{fileName} {
      allow read: if true;
      allow write: if false; // No public writes allowed
    }
    
    // Default deny all other paths
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}